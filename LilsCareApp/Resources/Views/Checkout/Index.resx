<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Адрес</value>
  </data>
  <data name="Already have an account?" xml:space="preserve">
    <value>Вече имате акаунт?</value>
  </data>
  <data name="Choose a shipping method..." xml:space="preserve">
    <value>Изберете метод за доставка...</value>
  </data>
  <data name="Courier" xml:space="preserve">
    <value>Куриер</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>лв.</value>
  </data>
  <data name="Delivery method" xml:space="preserve">
    <value>Метод за доставка</value>
  </data>
  <data name="Delivery to a courier office" xml:space="preserve">
    <value>Доставка до куриерски офис</value>
  </data>
  <data name="Delivery to address" xml:space="preserve">
    <value>Доставка до адрес</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактиране</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Имейл</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>безплатна</value>
  </data>
  <data name="in it for faster ordering." xml:space="preserve">
    <value>в него за по-бърза поръчка.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Влезте</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Изход</value>
  </data>
  <data name="No delivery address" xml:space="preserve">
    <value>няма адрес за доставка</value>
  </data>
  <data name="No promo code" xml:space="preserve">
    <value>Без промо код</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>Офис</value>
  </data>
  <data name="ORDER" xml:space="preserve">
    <value>ПОРЪЧКА</value>
  </data>
  <data name="Order Summary" xml:space="preserve">
    <value>Резюме на поръчката</value>
  </data>
  <data name="Payment method" xml:space="preserve">
    <value>Метод на плащане</value>
  </data>
  <data name="Phone number" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="Place an order" xml:space="preserve">
    <value>Направете поръчка</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Цена</value>
  </data>
  <data name="Recipient" xml:space="preserve">
    <value>Получател</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Извади от количка</value>
  </data>
  <data name="Review the order details above and place your order when you're ready." xml:space="preserve">
    <value>Прегледайте подробностите за поръчката по-горе и направете поръчката си, когато сте готови.</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Доставка</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Междинна сума</value>
  </data>
  <data name="The shopping bag is empty" xml:space="preserve">
    <value>Количката е празна</value>
  </data>
  <data name="To the store..." xml:space="preserve">
    <value>Към магазина...</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Общо</value>
  </data>
  <data name="until" xml:space="preserve">
    <value>до</value>
  </data>
  <data name="Write additional shipping requirements..." xml:space="preserve">
    <value>Напишете допълнителни изисквания относно доставката...</value>
  </data>
  <data name="You are signed in as" xml:space="preserve">
    <value>Влезли сте като</value>
  </data>
  <data name="You have a promo code" xml:space="preserve">
    <value>Имате промо код</value>
  </data>
</root>